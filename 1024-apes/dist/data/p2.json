[
    {
        "user_id": "14407173",
        "blog_id": "3920614",
        "cate_id": "48",
        "title": "【云计算奇妙学习之旅】第三期：华为计算虚拟化基础",
        "abstract": "上期提到了，学习云计算从虚拟化开始，那本期开始讲述华为计算虚拟化的基础知识。重要的事情，再说一遍，云计算不是虚拟化，虚拟化只是云计算的重要组成部分。 \n为什么要学虚拟化\n在之前的文章中，我们有了解到VMware公司推出的VMware Workstation这个软件，它实现的是单机版虚拟化，可以用来做实验或者搭建测试环境，但是它不能用于商业用途；如果说安装VMware Workstation的这台机",
        "add_time": "1631779854",
        "level": "10",
        "blog_type": "1",
        "username": "ytxs",
        "domain": "u_14417173",
        "add_time_str": "3天前",
        "nickname": "ICT技术交流",
        "url": "https://blog.51cto.com/u_14417173/3920614",
        "userUrl": "https://blog.51cto.com/u_14417173",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 470,
        "favorite_num": "0",
        "cateName": "虚拟化",
        "cateUrl": "https://blog.51cto.com/nav/virtual/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s3.51cto.com/images/blog/202109/16/0997c417d80f31a13a737d93b289fd23.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "11659225",
        "blog_id": "3918381",
        "cate_id": "6",
        "title": "生成树算法完全解析",
        "abstract": "许多老师讲一个新协议时，总会“强制性”地给你灌输它的各种规则，导致许多学生死记硬背之后任然一脸懵逼。我当初听stp时 也是遗留了很多问题：比如为什么这么设计；这种机制为什么不能这样改进；如果这么这么的话，会怎么怎么样。太多的不理解导致我的记忆效率大大降低。所以我 希望可以从一个协议的起源，开发的目地，设计师的想法（框架），分类分层地来叙述一种优秀的机制，并且提出它的局限性。     这是一个纯",
        "add_time": "1631776453",
        "level": "10",
        "blog_type": "1",
        "username": "JimKing001",
        "domain": "xosg",
        "add_time_str": "3天前",
        "nickname": "XOSG",
        "url": "https://blog.51cto.com/xosg/3918381",
        "userUrl": "https://blog.51cto.com/xosg",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 484,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/ops1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s6.51cto.com/images/blog/202109/16/6f5e2b90efd0ad19a0cd3ce35f35956f.jpeg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15060926",
        "blog_id": "3918055",
        "cate_id": "48",
        "title": "网络--VLAN，trunk",
        "abstract": "VLAN概述与优势，VLAN的种类，VLAN的范围，trunk",
        "add_time": "1631775959",
        "level": "10",
        "blog_type": "1",
        "username": "wx5feac8250cb98",
        "domain": "u_15070926",
        "add_time_str": "3天前",
        "nickname": "Clown_Tao",
        "url": "https://blog.51cto.com/u_15070926/3918055",
        "userUrl": "https://blog.51cto.com/u_15070926",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 442,
        "favorite_num": "0",
        "cateName": "虚拟化",
        "cateUrl": "https://blog.51cto.com/nav/virtual/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/16/b509b81d876b6f8b477a0a4244d4bd31.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15204399",
        "blog_id": "3917788",
        "cate_id": "15",
        "title": "小白都能看懂的JVM知识，一文带你学会JVM内存模型！",
        "abstract": "JVM是一种用于计算设备的规范，是一个虚构出来的计算机，通过在实际的计算机上仿真模拟各种计算机功能来实现的。",
        "add_time": "1631775612",
        "level": "20",
        "blog_type": "1",
        "username": "mb60a627770e82a",
        "domain": "u_15214399",
        "add_time_str": "3天前",
        "nickname": "华为云开发者社区",
        "url": "https://blog.51cto.com/u_15214399/3917788",
        "userUrl": "https://blog.51cto.com/u_15214399",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 1515,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/16/0510cad9a37e79e80c868fd6c8e9600b.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15171572",
        "blog_id": "3917754",
        "cate_id": "15",
        "title": "走进Java接口测试之测试框架TestNG数据驱动（入门篇）",
        "abstract": "前言\n我们在前面的文章中，和大家分享过接口自动化测试一些基本的实现方法，但是，你很快就会发现，如果在测试脚本中硬编码测试数据的话，测试脚本灵活性会非常低。而且，对于那些具有重复的请求，而只是测试入参不同的用例来说，就会存在大量重复的代码。那么怎么把自己从简单、重复的工作中解放出来呢？这个时候我们应考虑把测试数据和测试脚本分离，也就是说数据驱动。\n数据驱动的优势？\n\n数据驱动很好地解决了大量重复脚本",
        "add_time": "1631775482",
        "level": "10",
        "blog_type": "1",
        "username": "wx6086232c36932",
        "domain": "u_15181572",
        "add_time_str": "3天前",
        "nickname": "高楼（Zee）",
        "url": "https://blog.51cto.com/u_15181572/3917754",
        "userUrl": "https://blog.51cto.com/u_15181572",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 494,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s6.51cto.com/images/blog/202109/16/c0c8a913c41f1172b271c726079b454c.jpeg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15278108",
        "blog_id": "3916322",
        "cate_id": "20",
        "title": "项管行知02--工作环境",
        "abstract": "​\n 本次我们总结下工作环境的两大类：事业环境因素、组织过程资产。\n \n1 定义\n先看下PMBOK中的对它们的定义：\n事业环境因素（Enterprise Environmental Factors，EEF）：团队不能直接控制的，将对项目、项目集或项目组合产生影响、限制或指导作用的各种条件。\n组织过程资产（Organizational Process Assets，OPA）： 执行组织所特有的并被其",
        "add_time": "1631773384",
        "level": "10",
        "blog_type": "1",
        "username": "mb60da9b860b16d",
        "domain": "zhouyulu",
        "add_time_str": "3天前",
        "nickname": "Zhou2021",
        "url": "https://blog.51cto.com/zhouyulu/3916322",
        "userUrl": "https://blog.51cto.com/zhouyulu",
        "apraise_num": "1",
        "comments_num": "2",
        "pv": 387,
        "favorite_num": "0",
        "cateName": "项目管理",
        "cateUrl": "https://blog.51cto.com/nav/project-management/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s5.51cto.com/images/blog/202109/16/1567d32bef5bfb372b4aa52d4ced21f2.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15204399",
        "blog_id": "3916259",
        "cate_id": "64",
        "title": "vue3，对比 vue2 有什么优点？",
        "abstract": "Vue3新版本的理念成型于 2018 年末，当时的 Vue 2 已经有两岁半了。比起通用软件的生命周期来这好像也没那么久，Vue3在2020年正式推出，在源码和API都有较大变化，性能得到了显著的提升，比Vue2.x快1.2~2倍。",
        "add_time": "1631773349",
        "level": "20",
        "blog_type": "1",
        "username": "mb60a627770e82a",
        "domain": "u_15214399",
        "add_time_str": "3天前",
        "nickname": "华为云开发者社区",
        "url": "https://blog.51cto.com/u_15214399/3916259",
        "userUrl": "https://blog.51cto.com/u_15214399",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 595,
        "favorite_num": "0",
        "cateName": "Node.js",
        "cateUrl": "https://blog.51cto.com/nav/nodejs/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "14815302",
        "blog_id": "3916194",
        "cate_id": "66",
        "title": "中秋节出门游玩住宿找不到，酒店信息掌握不准？爬虫帮你解决",
        "abstract": "采集数据目标\n网址：美团酒店\n效果展示\n\n工具使用\n开发工具：pycharm开发环境：python3.7， Windows10使用工具包：requests\n项目思路解析\n首先选取自己想去旅游的景点，获取景点附近的数据，就比方说白又白中秋国庆打算去长沙游玩获取的就是长沙的住宿酒店（要长沙游玩的可以滴滴白又白）\n获取到数据后确定数据的加载是静态数据还是动态数据，当前网页数据为动态加载动态数据需要通过抓",
        "add_time": "1631773242",
        "level": "10",
        "blog_type": "1",
        "username": "wx5ecc6bcb4713c",
        "domain": "u_14825302",
        "add_time_str": "3天前",
        "nickname": "白又白学Python",
        "url": "https://blog.51cto.com/u_14825302/3916194",
        "userUrl": "https://blog.51cto.com/u_14825302",
        "apraise_num": "2",
        "comments_num": "1",
        "pv": 509,
        "favorite_num": "0",
        "cateName": "Python",
        "cateUrl": "https://blog.51cto.com/nav/python/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s2.51cto.com/images/blog/202109/16/b98ba8b3092666954f3cfcfeaa2c6e83.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15222255",
        "blog_id": "3916184",
        "cate_id": "16",
        "title": "web技术分享| 前端秘籍之“易容”术",
        "abstract": "大家好，我是初冬，一直想研究一下人工智能，但是一直再观望，上一期我写来一篇《一篇前端图像处理秘籍》，想着趁热打铁，于是卯足干劲，就有了前端换脸的想法，那就写一个换脸的Demo吧，因此就有以下图片中的DEMO。!在这里插入图片描述(https://s4.51cto.com/images/blog/202109/16/646de4065ec374eac6b01f8856597311.gif?xossp",
        "add_time": "1631773187",
        "level": "10",
        "blog_type": "1",
        "username": "mb60af473914346",
        "domain": "u_15232255",
        "add_time_str": "3天前",
        "nickname": "anyRTC",
        "url": "https://blog.51cto.com/u_15232255/3916184",
        "userUrl": "https://blog.51cto.com/u_15232255",
        "apraise_num": "2",
        "comments_num": "1",
        "pv": 404,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/web1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/16/646de4065ec374eac6b01f8856597311.gif?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15072365",
        "blog_id": "3915668",
        "cate_id": "73",
        "title": "浅谈百度阅读/文库NA端排版技术",
        "abstract": "!图片(https://s4.51cto.com/images/blog/202109/16/bb91325c72ffced8f14bbf3fdb1794a7.png?xossprocess=image/watermark,size_14,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZ",
        "add_time": "1631772589",
        "level": "10",
        "blog_type": "1",
        "username": "wx5ffd6a7629eee",
        "domain": "u_15082365",
        "add_time_str": "3天前",
        "nickname": "百度Geek说",
        "url": "https://blog.51cto.com/u_15082365/3915668",
        "userUrl": "https://blog.51cto.com/u_15082365",
        "apraise_num": "1",
        "comments_num": "1",
        "pv": 401,
        "favorite_num": "0",
        "cateName": "软件架构",
        "cateUrl": "https://blog.51cto.com/nav/software-architecture/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s7.51cto.com/images/blog/202109/16/bb91325c72ffced8f14bbf3fdb1794a7.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "14992417",
        "blog_id": "3914700",
        "cate_id": "94",
        "title": "2万字阐述-Python 用 XGBoost 进行梯度提升的数据准备（收藏）",
        "abstract": "2万字阐述-Python 用 XGBoost 进行梯度提升的数据准备（收藏）",
        "add_time": "1631771102",
        "level": "10",
        "blog_type": "1",
        "username": "wx5fadfd21e0805",
        "domain": "pythonEducation",
        "add_time_str": "3天前",
        "nickname": "PythonEducation",
        "url": "https://blog.51cto.com/pythonEducation/3914700",
        "userUrl": "https://blog.51cto.com/pythonEducation",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 373,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/ai1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/16/0fee8565d7ad9df23dc7483cb457cfb8.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15143979",
        "blog_id": "3911912",
        "cate_id": "20",
        "title": "新基建+新科技，智慧港口船舶抢抓数字化转型先机",
        "abstract": "自动化港口和船舶依托新基建和新科技势能，积极抢抓数字化转型先机，把数据作为企业的核心资源，运用 Hightopo 自主研发的 HT for Web 可视化产品，擦亮绿色发展底色，解决传统码头和船舶能耗高、成本高、污染大等问题。",
        "add_time": "1631762199",
        "level": "10",
        "blog_type": "1",
        "username": "mb60659657553c0",
        "domain": "u_15153979",
        "add_time_str": "3天前",
        "nickname": "物联网鲸鱼",
        "url": "https://blog.51cto.com/u_15153979/3911912",
        "userUrl": "https://blog.51cto.com/u_15153979",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 419,
        "favorite_num": "0",
        "cateName": "项目管理",
        "cateUrl": "https://blog.51cto.com/nav/project-management/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s8.51cto.com/images/blog/202109/16/22d59aaa250d7ae94a1d0499a650759c.gif?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15181752",
        "blog_id": "3911766",
        "cate_id": "49",
        "title": "KubeVirt with YRCloudFile 擦出创新的火花",
        "abstract": "第一眼看到 KubeVirt 这个词，对技术有些了解的人基本都会知道，Kube 代表了 Kubernetes 容器化平台，而 Virt 则是以 OpenStack 为代表的虚拟化平台及虚拟化的缩写。近几年Kubernetes 的大热，相伴随的是 OpenStack 虚拟化平台的落寞，KubeVirt 的出现，似乎有一种重整旧山河，王者归来的霸气。前几年 Kubernetes 与 OpenStack",
        "add_time": "1631761957",
        "level": "20",
        "blog_type": "1",
        "username": "mb60939e30d6d2e",
        "domain": "u_15191752",
        "add_time_str": "3天前",
        "nickname": "YRCloudFile",
        "url": "https://blog.51cto.com/u_15191752/3911766",
        "userUrl": "https://blog.51cto.com/u_15191752",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 918,
        "favorite_num": "0",
        "cateName": "云平台",
        "cateUrl": "https://blog.51cto.com/nav/cloud-platform/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s8.51cto.com/images/blog/202109/16/3b16d919c329c1b80644b4bc87d1d423.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "11246213",
        "blog_id": "3909128",
        "cate_id": "2",
        "title": "密码学系列之:bcrypt加密算法详解",
        "abstract": "简介\n今天要给大家介绍的一种加密算法叫做bcrypt, bcrypt是由Niels Provos和David Mazières设计的密码哈希函数，他是基于Blowfish密码而来的，并于1999年在USENIX上提出。\n除了加盐来抵御rainbow table 攻击之外，bcrypt的一个非常重要的特征就是自适应性，可以保证加密的速度在一个特定的范围内，即使计算机的运算能力非常高，可以通过增加迭代",
        "add_time": "1631758482",
        "level": "10",
        "blog_type": "1",
        "username": "ddean2009",
        "domain": "u_11256213",
        "add_time_str": "3天前",
        "nickname": "程序那些事",
        "url": "https://blog.51cto.com/u_11256213/3909128",
        "userUrl": "https://blog.51cto.com/u_11256213",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 372,
        "favorite_num": "0",
        "cateName": "安全技术",
        "cateUrl": "https://blog.51cto.com/nav/safety-technology/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "14973647",
        "blog_id": "3906426",
        "cate_id": "15",
        "title": "面试官让手写队列，差点没写出来",
        "abstract": "前言栈和队列是一对好兄弟，前面我们介绍过一篇栈的文章(栈，不就后进先出)，栈的机制相对简单，后入先出，就像进入一个狭小的山洞，山洞只有一个出入口，只能后进先出(在外面的先出去，堵在里面先进去的就有点倒霉)。而队列就好比是一个隧道，后面的人跟着前面走，前面人先出去(先入先出)。日常的排队就是队列运转形式的一个描述！栈是一种喜新厌旧的数据结构，来了新的就会处理新的把老的先停滞在这(我们找人、约人办事最",
        "add_time": "1631722956",
        "level": "20",
        "blog_type": "1",
        "username": "wx5f9a4a8e07cb7",
        "domain": "u_14983647",
        "add_time_str": "3天前",
        "nickname": "公众号bigsai",
        "url": "https://blog.51cto.com/u_14983647/3906426",
        "userUrl": "https://blog.51cto.com/u_14983647",
        "apraise_num": 0,
        "comments_num": "1",
        "pv": 1019,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s6.51cto.com/images/blog/202109/16/8c5ea7465c2cc90207d62b596d7411bc.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15295578",
        "blog_id": "3906077",
        "cate_id": "15",
        "title": "还重构？就你那代码只能铲了重写！",
        "abstract": "\n作者：小傅哥原文： https://mp.weixin.qq.com/s/4xzd6mC2wKhXldrX50uk2w\n\n一、前言\n我们不一样，就你没对象！ 对，你是面向过程编程的！\n我说的，绝大多数码农没日没夜被需求憋着肝出来的代码，无论有多么的吭哧瘪肚，都不可能有重构，只有重新写。为什么？因为重新写所花的时间成本，远比重构一份已经烂成团的代码，要节省时间。但谁又不敢保证重写完的代码，就比之前",
        "add_time": "1631712986",
        "level": "20",
        "blog_type": "1",
        "username": "wx60f184a5ebdc7",
        "domain": "u_15305578",
        "add_time_str": "3天前",
        "nickname": "你礼貌吗",
        "url": "https://blog.51cto.com/u_15305578/3906077",
        "userUrl": "https://blog.51cto.com/u_15305578",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 975,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/15/d2906bab3050f0c349ba50df1e60772f.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "10996243",
        "blog_id": "3906059",
        "cate_id": "72",
        "title": "【CI/CD技术专题】「Jenkins实战系列」总结归纳Jenkins的安装使用和配置流程介绍",
        "abstract": "Jenkins基础介绍篇Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。通过Jenkins实现自动化部署项目，本地git提交代码Jenkins自动化将项目部署在Linux服务器。Jenkins技术原理篇版本控制服务Jenkins自动化部署服务!(https://s4.51cto.com/ima",
        "add_time": "1631712489",
        "level": "20",
        "blog_type": "1",
        "username": "569590478",
        "domain": "alex4dream",
        "add_time_str": "3天前",
        "nickname": "李浩宇Alex",
        "url": "https://blog.51cto.com/alex4dream/3906059",
        "userUrl": "https://blog.51cto.com/alex4dream",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1029,
        "favorite_num": "0",
        "cateName": "软件设计",
        "cateUrl": "https://blog.51cto.com/nav/software-design/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "15060926",
        "blog_id": "3906046",
        "cate_id": "48",
        "title": "网络--静态路由、默认路由，ARP",
        "abstract": "静态路由，默认路由，ARP攻原理，ARP欺骗原理",
        "add_time": "1631712125",
        "level": "10",
        "blog_type": "1",
        "username": "wx5feac8250cb98",
        "domain": "u_15070926",
        "add_time_str": "3天前",
        "nickname": "Clown_Tao",
        "url": "https://blog.51cto.com/u_15070926/3906046",
        "userUrl": "https://blog.51cto.com/u_15070926",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 427,
        "favorite_num": "0",
        "cateName": "虚拟化",
        "cateUrl": "https://blog.51cto.com/nav/virtual/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/15/26631a3c915ec7108601a5915f5e6892.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "14992417",
        "blog_id": "3905971",
        "cate_id": "94",
        "title": "基于Python的信用评分卡模型分析-give me some credit数据集AUC 0.93",
        "abstract": "基于Python的信用评分卡模型-give me some credit数据集，AUC 0.93",
        "add_time": "1631710438",
        "level": "10",
        "blog_type": "1",
        "username": "wx5fadfd21e0805",
        "domain": "pythonEducation",
        "add_time_str": "4天前",
        "nickname": "PythonEducation",
        "url": "https://blog.51cto.com/pythonEducation/3905971",
        "userUrl": "https://blog.51cto.com/pythonEducation",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 561,
        "favorite_num": "1",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/ai1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s7.51cto.com/images/blog/202109/15/739afcbf9cc477064d60ea00fb6882bd.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "4664157",
        "blog_id": "3905513",
        "cate_id": "48",
        "title": "VMware常用网站列表",
        "abstract": "VMware版本清单 :https://kb.vmware.com/s/article/1014508\nESXi版本列表 :https://kb.vmware.com/s/article/2143832\nvCenter版本列表 :https://kb.vmware.com/s/article/2143838\n补丁下载(提高安全稳定):https://my.vmware.com/group/vmwa",
        "add_time": "1631699871",
        "level": "10",
        "blog_type": "1",
        "username": "zbw0752",
        "domain": "u_4674157",
        "add_time_str": "4天前",
        "nickname": "zbw0752",
        "url": "https://blog.51cto.com/u_4674157/3905513",
        "userUrl": "https://blog.51cto.com/u_4674157",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1092,
        "favorite_num": "0",
        "cateName": "虚拟化",
        "cateUrl": "https://blog.51cto.com/nav/virtual/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "15350778",
        "blog_id": "3905326",
        "cate_id": "15",
        "title": "要想用活Redis，Lua脚本是绕不过去的坎 ！",
        "abstract": "Redis 当中提供了许多重要的高级特性，比如发布与订阅，Lua 脚本等。Redis 当中也提供了自增的原子命令，但是假如我们需要同时执行好几个命令的同时又想让这些命令保持原子性，该怎么办呢？这时候就可以使用本文介绍的 Lua 脚本来实现。",
        "add_time": "1631699442",
        "level": "20",
        "blog_type": "1",
        "username": "mb613886ef6f7cf",
        "domain": "u_15360778",
        "add_time_str": "4天前",
        "nickname": "Java_程_序_员",
        "url": "https://blog.51cto.com/u_15360778/3905326",
        "userUrl": "https://blog.51cto.com/u_15360778",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 1537,
        "favorite_num": "1",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s3.51cto.com/images/blog/202109/15/f5426b027a22c4488a8249add9b9a68a.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15270062",
        "blog_id": "3904502",
        "cate_id": "15",
        "title": "网易三面：Stream是如何提高“遍历集合”效率的？",
        "abstract": "网易三面：Stream是如何提高“遍历集合”效率的？",
        "add_time": "1631698058",
        "level": "20",
        "blog_type": "1",
        "username": "mb60d190476cbb2",
        "domain": "u_15280062",
        "add_time_str": "4天前",
        "nickname": "熬夜加班写代码",
        "url": "https://blog.51cto.com/u_15280062/3904502",
        "userUrl": "https://blog.51cto.com/u_15280062",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 1260,
        "favorite_num": "2",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/15/a06666db8d25e6cd413638b40f29314d.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15358844",
        "blog_id": "3904143",
        "cate_id": "52",
        "title": "苹果 M1 上使用 Podman 替换 Docker Desktop",
        "abstract": "随着近几年微服务的兴起，加上云原生的蓬勃发展，大家已经对 Docker 不在陌生。Docker Desktop 是一个可以让大家在非 Linux 系统上，使用 Docker 进行开发调试的工具，非常容易上手，安装也非常简单。在苹果 m1 芯片出来后，Docker Desktop 第一时间发布了 beta 版本，也在前一段时间升级成了正式版。但是使用过程中还是有一些问题，例如运行一些 x86 的镜像会出错。最近 Docker 公司改变了收费模式，虽然说是不影响个人/小企业开发者，但谁叫咱是大公司，还是要看看替代方案的。",
        "add_time": "1631697409",
        "level": "10",
        "blog_type": "1",
        "username": "wx6141b7caebc48",
        "domain": "aifq",
        "add_time_str": "4天前",
        "nickname": "AI番茄",
        "url": "https://blog.51cto.com/aifq/3904143",
        "userUrl": "https://blog.51cto.com/aifq",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 720,
        "favorite_num": "1",
        "cateName": "Docker",
        "cateUrl": "https://blog.51cto.com/nav/docker/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "15358762",
        "blog_id": "3901932",
        "cate_id": "59",
        "title": "clickhouse详细配置",
        "abstract": "clickhouse 详细配置",
        "add_time": "1631693780",
        "level": "20",
        "blog_type": "1",
        "username": "qq6141ab51c43a8",
        "domain": "u_15368762",
        "add_time_str": "4天前",
        "nickname": "qq6141ab51c43a8",
        "url": "https://blog.51cto.com/u_15368762/3901932",
        "userUrl": "https://blog.51cto.com/u_15368762",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1370,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/bigdata1/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "2434177",
        "blog_id": "3900792",
        "cate_id": "73",
        "title": "灵活用工平台解决方案1.0",
        "abstract": " \n 项目概述\n \n 设计目标和原则\n项目的建设目标是建立一个专业、稳定、可靠、安全、易用的灵活用工平台。满足人力资源、社保、缴税、工资发放、任务发单、任务接单、任务结算、统计报表等业务需求。\n基于上述目标，系统在设计时应遵循以下原则：\n稳定行原则\n采用高效稳定技术架构和服务器架构，保证系统稳定运行。\n2、安全性原则\n系统运行具有较高的稳定性，确保数据的安全、可靠与保密。确保系统可审计、可监管、可",
        "add_time": "1631691611",
        "level": "10",
        "blog_type": "1",
        "username": "lhjszz",
        "domain": "lhjszz",
        "add_time_str": "4天前",
        "nickname": "lhjszz",
        "url": "https://blog.51cto.com/lhjszz/3900792",
        "userUrl": "https://blog.51cto.com/lhjszz",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 637,
        "favorite_num": "0",
        "cateName": "软件架构",
        "cateUrl": "https://blog.51cto.com/nav/software-architecture/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s8.51cto.com/images/blog/202109/15/efa3244f1f47178ceb87d73f14351d22.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "8919139",
        "blog_id": "3899719",
        "cate_id": "3",
        "title": "最全Windows版本jemalloc库（5.2.1）及其使用：包含动态库和静态库、x86版本和x6",
        "abstract": "编写服务器程序时，需要频繁的申请和释放内存，长时间运行会产生大量的内存碎片，这就导致即使当前系统中的闲置内存还足够多，但也无法申请到大的连续可用的内存块，因为此时的物理内存已经千疮百孔像个马蜂窝。此外，在高并发的情况下频繁的malloc/free也是一笔额外的cpu负担。如何解决内存碎片呢？在这里给大家安利一个举手之劳的好办法——重启应用。如果是客户端程序，可以通过退出重启的方式解决内存碎片的问题",
        "add_time": "1631690142",
        "level": "10",
        "blog_type": "1",
        "username": "lig4961",
        "domain": "u_8929139",
        "add_time_str": "4天前",
        "nickname": "一只会铲史的猫",
        "url": "https://blog.51cto.com/u_8929139/3899719",
        "userUrl": "https://blog.51cto.com/u_8929139",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 364,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/server1/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "14891125",
        "blog_id": "3898849",
        "cate_id": "6",
        "title": "OpenHarmony 源码解析之JavaScript API框架(NAPI)",
        "abstract": "OpenHarmony上JS API实现方式有三种，分别是：JSI机制、Channel机制、NAPI机制。\n\nJSI机制：L0~L1设备支持。\n\nChannel机制：L3设备支持。\n\nNAPI机制：目前仅L2设备支持，后续须推广到L3~L5设备。",
        "add_time": "1631688824",
        "level": "20",
        "blog_type": "1",
        "username": "鸿蒙社区",
        "domain": "harmonyos",
        "add_time_str": "4天前",
        "nickname": "HarmonyOS技术社区",
        "url": "https://blog.51cto.com/harmonyos/3898849",
        "userUrl": "https://blog.51cto.com/harmonyos",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1086,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/ops1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s7.51cto.com/images/blog/202109/15/6514d7f83a839a8907ff838d6dc9fe14.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15347269",
        "blog_id": "3898339",
        "cate_id": "15",
        "title": "使用Java故意消耗Cpu和内存的代码",
        "abstract": "为什么要故意消耗Cpu和内存？在项目交付时有时会申请一定的资源进行项目程序代码的部署，一般会预留一些Cpu和内存，以便后续扩展项目时能有足够的资源，但有时往往要求很严格，会时不时的检查你的服务器的cpu及内存有没有达到一定的使用率要求,如要求cpu使用率在60%以上，内存在70%以上，如果发现没有达到，为了节省资源，则可能会将配置回收，比如减掉你的cpu及内存数量，基于此，使用Java程序来空跑业",
        "add_time": "1631687958",
        "level": "20",
        "blog_type": "1",
        "username": "wx6135b7119b442",
        "domain": "u_15357269",
        "add_time_str": "4天前",
        "nickname": "不想秃头",
        "url": "https://blog.51cto.com/u_15357269/3898339",
        "userUrl": "https://blog.51cto.com/u_15357269",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 978,
        "favorite_num": "1",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "9086550",
        "blog_id": "3898000",
        "cate_id": "15",
        "title": "09 - ServerBootstrap-绑定过程doBind0",
        "abstract": "1.前面说ServerBootstrap的bind()方法内部进行了注册register和绑定bind0，第4节已经分析了register，这里分析bind0过程JavaclassAbstractBootstrap{privateChannelFuturedoBind(finalSocketAddresslocalAddress){ChannelFutureregFuture=initAndReg",
        "add_time": "1631687393",
        "level": "20",
        "blog_type": "1",
        "username": "1160636144",
        "domain": "pkbai",
        "add_time_str": "4天前",
        "nickname": "1160636144",
        "url": "https://blog.51cto.com/pkbai/3898000",
        "userUrl": "https://blog.51cto.com/pkbai",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1165,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "7922852",
        "blog_id": "3897481",
        "cate_id": "15",
        "title": "【HotSpot】一个java对象占多少空间",
        "abstract": "作者：threedayman来源：恒生LIGHT云社区(https://developer.hs.net/thread/1361\"恒生LIGHT云社区\")以下内容基于HotSpot虚拟机进行讲解验证。理论知识对象在堆内存中的存储布局可以划分为三个部分：对象头（Header）、实例数据（InstanceData）和对齐填充（Padding）。对象头中有两类信息运行时数据：哈希码、GC分代年龄、锁状态",
        "add_time": "1631686658",
        "level": "10",
        "blog_type": "1",
        "username": "Gloria小凡",
        "domain": "u_7932852",
        "add_time_str": "4天前",
        "nickname": "恒生LIGHT云社区",
        "url": "https://blog.51cto.com/u_7932852/3897481",
        "userUrl": "https://blog.51cto.com/u_7932852",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 454,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": []
    }
]