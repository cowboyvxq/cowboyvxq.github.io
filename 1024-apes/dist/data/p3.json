[
    {
        "user_id": "15126813",
        "blog_id": "3897474",
        "cate_id": "59",
        "title": "3分钟，看懂假设检验",
        "abstract": "干货~",
        "add_time": "1631686655",
        "level": "10",
        "blog_type": "1",
        "username": "mb6051ffaa6eb1c",
        "domain": "u_15136813",
        "add_time_str": "4天前",
        "nickname": "码工小熊",
        "url": "https://blog.51cto.com/u_15136813/3897474",
        "userUrl": "https://blog.51cto.com/u_15136813",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 699,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/bigdata1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s7.51cto.com/images/blog/202109/15/50eebf2191b181f650ccc67a534dadf9.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "13636489",
        "blog_id": "3896892",
        "cate_id": "130",
        "title": "集群备库重做步骤",
        "abstract": "\n\n\n\n\n\n\n目录\n\n\n\n\n\n\n\n\n环境\n症状\n问题原因\n解决方案\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n环境\n\n\n\n\n\n\n\n\n系统平台：Linux x86-64 Red Hat Enterprise Linux 7\n版本：5.6.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n症状\n\n\n\n\n\n\n\n\n\n\nHG_Repmgr多是通过repmgrd守护进程对集群状态进行监控来自动完成相应的管理,如果集群有人工干预或人工误",
        "add_time": "1631685740",
        "level": "10",
        "blog_type": "1",
        "username": "highgo",
        "domain": "u_13646489",
        "add_time_str": "4天前",
        "nickname": "瀚高实验室",
        "url": "https://blog.51cto.com/u_13646489/3896892",
        "userUrl": "https://blog.51cto.com/u_13646489",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 426,
        "favorite_num": "0",
        "cateName": "SQL Server",
        "cateUrl": "https://blog.51cto.com/nav/sqlserver/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/15/171fd0cb22a160e971afba1090bb02e0.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15204399",
        "blog_id": "3894178",
        "cate_id": "7",
        "title": "我用MRS-ClickHouse构建的用户画像系统，让老板拍手称赞",
        "abstract": "在移动互联网时代，用户数量庞大，标签数量众多，用户标签的数据量巨大。用户画像系统中，对于标签的存储和查询，不同的企业有不同的实现方案。当前主流的实现方案采用ElasticSearch方案。但基于ElasticSearch构建用户画像平台，往往面临灵活性不足、资源开销大、无SQL接口开发不便等问题。为此，本文提供了一种基于华为MRS ClickHouse构建用户画像系统的方法。",
        "add_time": "1631677200",
        "level": "20",
        "blog_type": "1",
        "username": "mb60a627770e82a",
        "domain": "u_15214399",
        "add_time_str": "4天前",
        "nickname": "华为云开发者社区",
        "url": "https://blog.51cto.com/u_15214399/3894178",
        "userUrl": "https://blog.51cto.com/u_15214399",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 1189,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/database1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/15/cf2354d5642810806014a48b26387c85.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "1592069",
        "blog_id": "3892313",
        "cate_id": "54",
        "title": "hdfs出现Cannot obtain block length for LocatedBlockt",
        "abstract": "导致的原因：是因为2021/0913那天重启的hdfs的服务，flink实时任务还一直往hdfs里面写任务。（有些公司是因为flume导致的）\n\n所以这里的”Cannot obtain block length for LocatedBlock”结合字面意思讲应该是当前有文件处于写入状态尚未关闭，无法与对应的datanode通信来成功标识其block长度.\n \n定位到了出问题的文件，是2021年0",
        "add_time": "1631674487",
        "level": "10",
        "blog_type": "1",
        "username": "sqxinquan",
        "domain": "wang",
        "add_time_str": "4天前",
        "nickname": "醉舞斜陽",
        "url": "https://blog.51cto.com/wang/3892313",
        "userUrl": "https://blog.51cto.com/wang",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 593,
        "favorite_num": "0",
        "cateName": "Hadoop",
        "cateUrl": "https://blog.51cto.com/nav/hadoop/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/15/36c24284778a02f4a06c3cbf4a39f116.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "14294894",
        "blog_id": "3892234",
        "cate_id": "61",
        "title": "HTML+CSS+JS实现 ❤️制作loading动画效果❤️",
        "abstract": "",
        "add_time": "1631674408",
        "level": "10",
        "blog_type": "1",
        "username": "wx5cc060c142743",
        "domain": "u_14304894",
        "add_time_str": "4天前",
        "nickname": "java李杨勇",
        "url": "https://blog.51cto.com/u_14304894/3892234",
        "userUrl": "https://blog.51cto.com/u_14304894",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 336,
        "favorite_num": "0",
        "cateName": "Html/CSS",
        "cateUrl": "https://blog.51cto.com/nav/htmlcss/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s5.51cto.com/images/blog/202109/10/f06349512ca083f2f8fc356ff1699331.gif?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15229049",
        "blog_id": "3890992",
        "cate_id": "19",
        "title": "软件测试的系统测试流程",
        "abstract": "　　本章节主要讲解“软件的系统测试过程”的内容，系统测试过程分为四个阶段：软件测试计划阶段、测试设计阶段、测试实现阶段、测试执行阶段。\n　　(1)测试计划阶段主要是定义测试目标、测试过程中人力资源的安排、测试准入准出条件、每个Build 版本的测试时间、里程碑点、风险分析等信息。测试计划最核心的目的就是控制风险。\n　　(2)测试设计阶段主要是完成测试方案，当测试计划和需求规格说明书完成评审后即开始",
        "add_time": "1631672812",
        "level": "10",
        "blog_type": "1",
        "username": "mb60b44bf081aec",
        "domain": "u_15239049",
        "add_time_str": "4天前",
        "nickname": "多测师11",
        "url": "https://blog.51cto.com/u_15239049/3890992",
        "userUrl": "https://blog.51cto.com/u_15239049",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 394,
        "favorite_num": "0",
        "cateName": "软件测试",
        "cateUrl": "https://blog.51cto.com/nav/software-test/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/15/d9db0b4a7603c4630f04179c54a4fe20.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15171572",
        "blog_id": "3889286",
        "cate_id": "15",
        "title": "走进Java接口测试之理解JSON和XML基础",
        "abstract": "引言\n现如今 Restful API 越来越流行，而 JSON 和 XML 基本上是两种主流格式用来交换数据，JSON和 XML 都在 Web上有完善的开放标准（RFC 7159，RFC 4825），本文将带着大家来了解下这个两种数据格式。\n\nJSON\nJSON 简介\nJSON 是一种用于在多个应用程序之间共享数据的通信格式。JSON代表 JavaScript Object Notation。它基",
        "add_time": "1631670251",
        "level": "10",
        "blog_type": "1",
        "username": "wx6086232c36932",
        "domain": "u_15181572",
        "add_time_str": "4天前",
        "nickname": "高楼（Zee）",
        "url": "https://blog.51cto.com/u_15181572/3889286",
        "userUrl": "https://blog.51cto.com/u_15181572",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 503,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s6.51cto.com/images/blog/202109/15/64af5e4546858bb469ddd7201e29fe92.jpeg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "14847544",
        "blog_id": "3888828",
        "cate_id": "2",
        "title": "Meterpreter入门与精通（十三）（十四）",
        "abstract": "Meterpreter第十三课和第十四课",
        "add_time": "1631669541",
        "level": "10",
        "blog_type": "1",
        "username": "wx5ef82139be51b",
        "domain": "u_14857544",
        "add_time_str": "4天前",
        "nickname": "来西瓜",
        "url": "https://blog.51cto.com/u_14857544/3888828",
        "userUrl": "https://blog.51cto.com/u_14857544",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 806,
        "favorite_num": "0",
        "cateName": "安全技术",
        "cateUrl": "https://blog.51cto.com/nav/safety-technology/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s6.51cto.com/images/blog/202109/15/84b1ae98aa57dff709a89d2c0c4f4373.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "11246213",
        "blog_id": "3888266",
        "cate_id": "15",
        "title": "linux系列之:告诉他，他根本不懂kill",
        "abstract": "简介\n和很多程序员打过交道，这些程序员可能熟知for遍历的好几种写法，但是却对写出来的程序部署的环境一无所知。我敢打赌，在spring boot出现之后，已经很少有程序员知道tomcat到底是怎么运行的了。对于他们来说，运行一个jar包就完事了。\n工具的先进性确实带给我们很多便利，也提升了程序员的开发效率，同时也降低了程序员的进入门槛。今天想和大家一起讨论一下，linux中的kill命令到底是做什",
        "add_time": "1631666849",
        "level": "10",
        "blog_type": "1",
        "username": "ddean2009",
        "domain": "u_11256213",
        "add_time_str": "4天前",
        "nickname": "程序那些事",
        "url": "https://blog.51cto.com/u_11256213/3888266",
        "userUrl": "https://blog.51cto.com/u_11256213",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 490,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "11283981",
        "blog_id": "3887779",
        "cate_id": "68",
        "title": "Vue3 + TypeScript + Gin 实现后台权限管理平台",
        "abstract": "前端使用Vue3、CompositionAPI、typescript、vite、element plus，后端使用Go + Gin + Gorm，实现的后端管理系统，支持菜单、页面按钮及后端API的权限管控。",
        "add_time": "1631640229",
        "level": "10",
        "blog_type": "1",
        "username": "雅天",
        "domain": "u_11293981",
        "add_time_str": "4天前",
        "nickname": "LanYuLei",
        "url": "https://blog.51cto.com/u_11293981/3887779",
        "userUrl": "https://blog.51cto.com/u_11293981",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 4152,
        "favorite_num": "1",
        "cateName": "Go语言",
        "cateUrl": "https://blog.51cto.com/nav/go/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s3.51cto.com/images/20210915/1631640038316546.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15068339",
        "blog_id": "3887604",
        "cate_id": "61",
        "title": "整理全网可视化大屏有关资料，学习大屏设计，大屏原型参考，大屏设计参考",
        "abstract": "整理全网最全大屏设计资源，包括各类智慧大屏，axure高保真大屏原型，大屏设计参考思路，大屏设计可视化图片，如何学习设计大屏等。",
        "add_time": "1631633700",
        "level": "10",
        "blog_type": "1",
        "username": "qq5ff6cb433ee29",
        "domain": "lovebetterworld",
        "add_time_str": "4天前",
        "nickname": "爱是与世界平行",
        "url": "https://blog.51cto.com/lovebetterworld/3887604",
        "userUrl": "https://blog.51cto.com/lovebetterworld",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 525,
        "favorite_num": "0",
        "cateName": "Html/CSS",
        "cateUrl": "https://blog.51cto.com/nav/htmlcss/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s5.51cto.com/images/blog/202109/14/323d96a7b957a1c50f2f4816e59613a6.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "13723131",
        "blog_id": "3887601",
        "cate_id": "15",
        "title": "Set接口及其实现类HashSet、TreeSet的底层结构与区别",
        "abstract": "Set接口及其实现类HashSet、TreeSet的底层结构与区别",
        "add_time": "1631633607",
        "level": "10",
        "blog_type": "1",
        "username": "wx5aed575a5a9da",
        "domain": "u_13733131",
        "add_time_str": "4天前",
        "nickname": "Java鱼仔",
        "url": "https://blog.51cto.com/u_13733131/3887601",
        "userUrl": "https://blog.51cto.com/u_13733131",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 401,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s6.51cto.com/images/20210914/1631633446131226.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15325178",
        "blog_id": "3887444",
        "cate_id": "18",
        "title": "[C语言] strlen、strcmp、时间戳",
        "abstract": "时间戳",
        "add_time": "1631629222",
        "level": "10",
        "blog_type": "1",
        "username": "qq611ba21b85236",
        "domain": "u_15335178",
        "add_time_str": "4天前",
        "nickname": "咸菜萝卜干",
        "url": "https://blog.51cto.com/u_15335178/3887444",
        "userUrl": "https://blog.51cto.com/u_15335178",
        "apraise_num": "2",
        "comments_num": "0",
        "pv": 381,
        "favorite_num": "0",
        "cateName": "C/C++",
        "cateUrl": "https://blog.51cto.com/nav/c-cpp/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/14/d4b8909a0f57501b82a4f697a7e7283f.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "6724358",
        "blog_id": "3887237",
        "cate_id": "44",
        "title": "Redis集群高可用(Keepalived+Twemproxy)",
        "abstract": "主机分配:\n10.40.42.103  twemproxy  keepalived-backup\n10.40.42.127  twemproxy  keepalived-master\n10.40.42.128  vip (ping下本地网络没有被使用的IP)\n部署twemproxy :\n10.40.42.103和10.40.42.127已经部署。\n[root@master twemproxy]# ",
        "add_time": "1631621792",
        "level": "20",
        "blog_type": "1",
        "username": "215687833",
        "domain": "215687833",
        "add_time_str": "5天前",
        "nickname": "青衫解衣",
        "url": "https://blog.51cto.com/215687833/3887237",
        "userUrl": "https://blog.51cto.com/215687833",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1038,
        "favorite_num": "1",
        "cateName": "Linux",
        "cateUrl": "https://blog.51cto.com/nav/linux/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s5.51cto.com/images/blog/202109/14/0a3a08d0a9452f7b3058702aa029dbd6.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15323007",
        "blog_id": "3887218",
        "cate_id": "19",
        "title": "rf安装之rf应用",
        "abstract": "在2019年1月20号，Robot Framework RIDE发布了1.7.3版本解决了此前RIDE一直无法兼容Python 3的问题。也就意味着Robot Framework不管是采用何种编辑器，都已经是可以支持Python 3了。一、需要安装的工具目录安装 python3.7.0我这里采用的是 python3.7 （目前慢慢市场在推广 python3.0 版本了）安装 robotframew",
        "add_time": "1631621063",
        "level": "10",
        "blog_type": "1",
        "username": "wx611921c9ded20",
        "domain": "u_15333007",
        "add_time_str": "5天前",
        "nickname": "YJMyen",
        "url": "https://blog.51cto.com/u_15333007/3887218",
        "userUrl": "https://blog.51cto.com/u_15333007",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 634,
        "favorite_num": "0",
        "cateName": "软件测试",
        "cateUrl": "https://blog.51cto.com/nav/software-test/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s5.51cto.com/images/blog/202109/14/329fa5ab855c85605aeba41a197f009a.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "14907507",
        "blog_id": "3887114",
        "cate_id": "18",
        "title": " 单链表各种操作的代码实现",
        "abstract": "单链表各种操作的代码实现今天简简单单的复习一下单链表的各种操作。具体操作有：打印，尾插，头插，尾删，头删，在任意结点之前插入，删除任意结点，malloc一个新结点，在所给链表中查找数据x，并返回它的结点等。标注的比较详细，可以借助注释食用哦。分为三个项:SList.h:包的引用和函数的声明SList.c:各个操作的实现SList.c:各个操作的实现SList.h：cinclude&lt;stdio.hi",
        "add_time": "1631617159",
        "level": "20",
        "blog_type": "1",
        "username": "wx5f46231846684",
        "domain": "u_14917507",
        "add_time_str": "5天前",
        "nickname": "是小明同学啊",
        "url": "https://blog.51cto.com/u_14917507/3887114",
        "userUrl": "https://blog.51cto.com/u_14917507",
        "apraise_num": "2",
        "comments_num": "0",
        "pv": 1060,
        "favorite_num": "0",
        "cateName": "C/C++",
        "cateUrl": "https://blog.51cto.com/nav/c-cpp/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "1246073",
        "blog_id": "3885935",
        "cate_id": "82",
        "title": "阿里云VPC实验五则",
        "abstract": "一、实验场景：\n1、无公网IP和EIP（弹性公网IP）的ECS通过NAT网关设置SNAT（源地址转换）访问公网\n2、无公网IP和EIP的ECS通过NAT网关设置DNAT（目标地址转换）向公网提供服务\n3、相同地域、相同可用区、相同VPC（专有网络）的两台ECS，ECS1绑定EIP且自建NAT网关，ECS2无公网IP和EIP，通过ECS1访问公网并向公网提供服务\n4、相同地域、不同可用区、不同VPC",
        "add_time": "1631612656",
        "level": "20",
        "blog_type": "1",
        "username": "孤傲寒光",
        "domain": "qiuyue",
        "add_time_str": "5天前",
        "nickname": "Marion0728",
        "url": "https://blog.51cto.com/qiuyue/3885935",
        "userUrl": "https://blog.51cto.com/qiuyue",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1233,
        "favorite_num": "1",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/certification1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/14/08b703183717ce700f0b32552ef5c0d5.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "14958479",
        "blog_id": "3882728",
        "cate_id": "98",
        "title": "如何实现 iOS 短视频跨页面的无痕续播？",
        "abstract": "在一切皆可视频化的今天，短视频内容作为移动端产品新的促活点，受到了越来越多的重视与投入。盒马在秒播、卡顿率、播放成功率等基础优化之外，在用户使用体验上引入了无痕续播能力，提升用户观看视频内容的延续性。本篇将分享盒马在iOS短视频方面的实践干货。作者｜神捕审校｜泰一!(https://s4.51cto.com/images/blog/202109/14/fd75c656a5adc34cf29bff6",
        "add_time": "1631608220",
        "level": "20",
        "blog_type": "1",
        "username": "wx5f8e9982cf5e2",
        "domain": "u_14968479",
        "add_time_str": "5天前",
        "nickname": "阿里云视频云",
        "url": "https://blog.51cto.com/u_14968479/3882728",
        "userUrl": "https://blog.51cto.com/u_14968479",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 1033,
        "favorite_num": "0",
        "cateName": "iOS",
        "cateUrl": "https://blog.51cto.com/nav/ios/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "15350778",
        "blog_id": "3882508",
        "cate_id": "15",
        "title": "绝了！这是我见过最详细的HashMap源码解析！",
        "abstract": "HashMap是基于哈希表实现的,每一个元素是一个key-value对,其内部通过单链表解决冲突问题,容量不足(超过了阀值)时,同样会自动增长.\n\nHashMap是非线程安全的,只适用于单线程环境,多线程环境可以采用并发包下的concurrentHashMap\n\nHashMap 实现了Serializable接口，因此它支持序列化，实现了Cloneable接口，能被克隆\n\nHashMap是基于哈希表的Map接口的非同步实现.此实现提供所有可选的映射操作,并允许使用null值和null键.此类不保证映射的顺序,特别是它不保证该顺序恒久不变.\n\nJava8中又对此类底层实现进行了优化，比如引入了红黑树的结构以解决哈希碰撞",
        "add_time": "1631607921",
        "level": "20",
        "blog_type": "1",
        "username": "mb613886ef6f7cf",
        "domain": "u_15360778",
        "add_time_str": "5天前",
        "nickname": "Java_程_序_员",
        "url": "https://blog.51cto.com/u_15360778/3882508",
        "userUrl": "https://blog.51cto.com/u_15360778",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 8746,
        "favorite_num": "1",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/14/00cb62a71c45df89a01b93cb4f0a98e8.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "5829280",
        "blog_id": "3881974",
        "cate_id": "66",
        "title": "用Python生成二维码",
        "abstract": "Python用MyQR生成自定义个性二维码MyQR模块是一个能够生成自定义二维码的python第三方库，根据需要能够生成普通二维码、带背景图片的艺术二维码、动态二维码。1.MyQR安装安装非常简单，直接用pipinstallMyQR，需要注意的是MyQR依赖于python3，在python2的环境下可能无法正常使用。如果是在jupyternotebook中安装，则使用!pipinstallMyQR",
        "add_time": "1631607146",
        "level": "10",
        "blog_type": "1",
        "username": "elaine_swing",
        "domain": "u_5839280",
        "add_time_str": "5天前",
        "nickname": "卿本佳人_奈何",
        "url": "https://blog.51cto.com/u_5839280/3881974",
        "userUrl": "https://blog.51cto.com/u_5839280",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 459,
        "favorite_num": "0",
        "cateName": "Python",
        "cateUrl": "https://blog.51cto.com/nav/python/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/20210913/1631529674840858.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15270062",
        "blog_id": "3881168",
        "cate_id": "15",
        "title": "Java面试官：如何正确使用 Spring 注入集合类型？",
        "abstract": "集合类型的自动注入是Spring提供的另外一个强大功能。我们在方便的使用依赖注入的特性时，必须要思考对象从哪里注入、怎么创建、为什么是注入这一个对象的。虽然编写框架的目的是让开发人员无需关心太多底层细节，能专心业务逻辑的开发，但是作为开发人员不能真的无脑去使用框架。\n\n务必学会注入集合等高级用法，让自己有所提升！\n\n现在有一需求：存在多个用户Bean，找出来存储到一个List",
        "add_time": "1631606099",
        "level": "10",
        "blog_type": "1",
        "username": "mb60d190476cbb2",
        "domain": "u_15280062",
        "add_time_str": "5天前",
        "nickname": "熬夜加班写代码",
        "url": "https://blog.51cto.com/u_15280062/3881168",
        "userUrl": "https://blog.51cto.com/u_15280062",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 522,
        "favorite_num": "0",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/14/f69dbe2a958472e1cfcfb4d6e65d38b3.jpeg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15313646",
        "blog_id": "3880918",
        "cate_id": "15",
        "title": "Java线上故障排查不会怎么办，p8大佬总结的套路清单带你轻松玩转！",
        "abstract": "前言线上故障主要会包括CPU、磁盘、内存以及网络问题，而大多数故障可能会包含不止一个层面的问题，所以进行排查时候尽量四个方面依次排查一遍。同时例如jstack、jmap等工具也是不囿于一个方面的问题的，基本上出问题就是df、free、top三连，然后依次jstack、jmap伺候，具体问题具体分析即可。CPU一般来讲我们首先会排查CPU方面的问题。CPU异常往往还是比较好定位的。原因包括业务逻辑问",
        "add_time": "1631605485",
        "level": "20",
        "blog_type": "1",
        "username": "wx610b9fe301db9",
        "domain": "u_15323646",
        "add_time_str": "5天前",
        "nickname": "麒麟改bug",
        "url": "https://blog.51cto.com/u_15323646/3880918",
        "userUrl": "https://blog.51cto.com/u_15323646",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 983,
        "favorite_num": "1",
        "cateName": "Java",
        "cateUrl": "https://blog.51cto.com/nav/java/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "14971263",
        "blog_id": "3880245",
        "cate_id": "53",
        "title": "零基础入门Serverless：Hello World",
        "abstract": "来自Serverless，向世界说句你好。背景知识什么是Serverless自2006年8月9日，Google首席执行官埃里克·施密特（EricSchmidt）在搜索引擎大会（SESSanJose2006）首次提出\"云计算\"（CloudComputing）的概念之后，云计算的发展可以用日新月异这个词来形容。那么究竟什么才是Serverless呢？简单来说，Serverless可以说是一种架构，一种",
        "add_time": "1631603992",
        "level": "10",
        "blog_type": "1",
        "username": "mb5f97cd8483e6d",
        "domain": "u_14981263",
        "add_time_str": "5天前",
        "nickname": "阿里云云起实验室",
        "url": "https://blog.51cto.com/u_14981263/3880245",
        "userUrl": "https://blog.51cto.com/u_14981263",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 391,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/cloud1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/14/f29d90e3b629aefffe09ca7eebe4e082.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "15204399",
        "blog_id": "3879303",
        "cate_id": "7",
        "title": "【万字干货】OpenMetric与时序数据库存储模型分析",
        "abstract": "解读OpenMetric规范和指标的模型定义基础上，结合当下主流的时序数据库核心存储及处理技术，尝试让用户（架构师、开发者或使用者）结合自身业务场景选择合适的产品，消除技术选型的困惑。",
        "add_time": "1631602758",
        "level": "20",
        "blog_type": "1",
        "username": "mb60a627770e82a",
        "domain": "u_15214399",
        "add_time_str": "5天前",
        "nickname": "华为云开发者社区",
        "url": "https://blog.51cto.com/u_15214399/3879303",
        "userUrl": "https://blog.51cto.com/u_15214399",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 9049,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/database1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s9.51cto.com/images/blog/202109/14/ec198573a8b688993f5d4d10b1a65b88.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "14891125",
        "blog_id": "3877618",
        "cate_id": "6",
        "title": "51CTO HarmonyOS技术社区优秀社区共建者表彰",
        "abstract": "在过去的一年中我们看到大量的企业和个人开发者涌入，这在一定程度上丰富了鸿蒙生态，部分补全了鸿蒙生态版图。鸿蒙生态是一个抽象而庞大的概念，鸿蒙生态繁荣是一个需要涵盖各领域、多方参与，并脚踏实地持续投入才能达成的愿景。",
        "add_time": "1631600502",
        "level": "10",
        "blog_type": "1",
        "username": "鸿蒙社区",
        "domain": "harmonyos",
        "add_time_str": "5天前",
        "nickname": "HarmonyOS技术社区",
        "url": "https://blog.51cto.com/harmonyos/3877618",
        "userUrl": "https://blog.51cto.com/harmonyos",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 506,
        "favorite_num": "0",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/ops1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s5.51cto.com/images/20210914/1631600070487161.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "9530389",
        "blog_id": "3876892",
        "cate_id": "21",
        "title": "听说原型是UI的工作，我要暴走了…",
        "abstract": "看到这个话题，忍不住想来参与一波！\n最近，不管是网上冲浪还是线下吐槽，“原型该谁做”，这是我听到PM和UI讨论最激烈的话题了……\n如果你家PM对你说“原型是UI的工作，不然UI就是在做美工”，那么你可以认为他即将甩锅了。\n \n                        \n \n我们不妨来梳理一下思路，先看一下各自的概念描述：\n原型图：根据需求文档用线条、图形描绘出的产品框架及逻辑；\nUI图：跟我",
        "add_time": "1631599623",
        "level": "10",
        "blog_type": "1",
        "username": "jongde",
        "domain": "u_9540389",
        "add_time_str": "5天前",
        "nickname": "jongde",
        "url": "https://blog.51cto.com/u_9540389/3876892",
        "userUrl": "https://blog.51cto.com/u_9540389",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 375,
        "favorite_num": "0",
        "cateName": "IT业界",
        "cateUrl": "https://blog.51cto.com/nav/industry/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s2.51cto.com/images/blog/202109/14/b2131d92b6174c443020a375c1003598.jpg?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "13663090",
        "blog_id": "3875231",
        "cate_id": "44",
        "title": "Centos7 安装 nbd模块",
        "abstract": "前言最近想编辑下KVM虚拟机磁盘的文件，看资料需要使用ndb服务，但发现Centos7系统中默认竟没有ndb.ko文件，参考网上资料，发现该驱动需要内核编译才可获得的，特此记录一下。nbd编译安装shellyuminstallkerneldevelkernelheaderselfutilslibelfdevel查看OS版本rel=cat/etc/redhatreleaseawk'{print4}'",
        "add_time": "1631595109",
        "level": "10",
        "blog_type": "1",
        "username": "wx5ab8cbaabb4ed",
        "domain": "u_13673090",
        "add_time_str": "5天前",
        "nickname": "东凌阁",
        "url": "https://blog.51cto.com/u_13673090/3875231",
        "userUrl": "https://blog.51cto.com/u_13673090",
        "apraise_num": 0,
        "comments_num": "0",
        "pv": 332,
        "favorite_num": "0",
        "cateName": "Linux",
        "cateUrl": "https://blog.51cto.com/nav/linux/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "15222255",
        "blog_id": "3875036",
        "cate_id": "98",
        "title": "IOS技术分享| any自习室场景实现",
        "abstract": "前言线上自习室，又称“在线自习室”“云自习室”“云上自习室”“云端自习室”，是一种用互联网技术打造的在线自习室。线上自习室打破了时间、空间的束缚，比线下自习室更便捷，形式更多样。anyRTC作为全球实时音视频云服务供应商，推出了any自习室，致力于帮助开发者更快地实现实时互动场景。场景实现效果截屏!截屏预览(https://s4.51cto.com/images/blog/202109/14/ac",
        "add_time": "1631592115",
        "level": "10",
        "blog_type": "1",
        "username": "mb60af473914346",
        "domain": "u_15232255",
        "add_time_str": "5天前",
        "nickname": "anyRTC",
        "url": "https://blog.51cto.com/u_15232255/3875036",
        "userUrl": "https://blog.51cto.com/u_15232255",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 636,
        "favorite_num": "0",
        "cateName": "iOS",
        "cateUrl": "https://blog.51cto.com/nav/ios/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s4.51cto.com/images/blog/202109/14/ac1e22921054e49cb3bc288c84449e1d.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    },
    {
        "user_id": "35353",
        "blog_id": "3873876",
        "cate_id": "44",
        "title": "CentOS+Nginx+Tomcat+Mysql+PHP",
        "abstract": "完整的CentOS+Nginx+Tomcat+Mysql+PHP环境配置教程，让运维不再难。",
        "add_time": "1631590452",
        "level": "20",
        "blog_type": "1",
        "username": "ankey",
        "domain": "ankey",
        "add_time_str": "5天前",
        "nickname": "ankey",
        "url": "https://blog.51cto.com/ankey/3873876",
        "userUrl": "https://blog.51cto.com/ankey",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 8142,
        "favorite_num": "4",
        "cateName": "Linux",
        "cateUrl": "https://blog.51cto.com/nav/linux/push",
        "is_apraise": 0,
        "img_urls": []
    },
    {
        "user_id": "14891125",
        "blog_id": "3873672",
        "cate_id": "6",
        "title": "JS语言在HarmonyOS应用开发框架中的作用",
        "abstract": "在万物互联（Internet of Things，简称IoT）时代，JS（JavaScript）语言越来越重要了，并且受到了很多开发者小伙伴的关注。HarmonyOS也选择JS作为其应用开发的一种语言，肯定有不少好奇的小伙伴想知道：JS语言有什么优势呢？JS被应用在了HarmonyOS的哪些方面呢？下面就为各位好奇的小伙伴们一一揭晓。",
        "add_time": "1631590108",
        "level": "20",
        "blog_type": "1",
        "username": "鸿蒙社区",
        "domain": "harmonyos",
        "add_time_str": "5天前",
        "nickname": "HarmonyOS技术社区",
        "url": "https://blog.51cto.com/harmonyos/3873672",
        "userUrl": "https://blog.51cto.com/harmonyos",
        "apraise_num": "1",
        "comments_num": "0",
        "pv": 4442,
        "favorite_num": "1",
        "cateName": "其他",
        "cateUrl": "https://blog.51cto.com/nav/ops1/push",
        "is_apraise": 0,
        "img_urls": [
            "https://s8.51cto.com/images/blog/202109/14/ebaaed4d16620e5859ed7a195e352f10.png?x-oss-process=image/resize,m_fixed,h_132,w_220"
        ]
    }
]